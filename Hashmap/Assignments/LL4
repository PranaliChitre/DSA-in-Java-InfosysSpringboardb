import java.util.LinkedList;
import java.util.List;

class Queue {
    private LinkedList<String> queue;
    private int maxSize;

    public Queue(int maxSize) {
        this.queue = new LinkedList<>();
        this.maxSize = maxSize;
    }

    public void enqueue(String item) {
        if (queue.size() < maxSize) {
            queue.addLast(item);
            System.out.println(item + " added to the queue.");
        } else {
            System.out.println("Queue is full. Cannot enqueue " + item);
        }
    }

    public String dequeue() {
        if (!queue.isEmpty()) {
            String removedItem = queue.removeFirst();
            System.out.println(removedItem + " removed from the queue.");
            return removedItem;
        } else {
            System.out.println("Queue is empty. Cannot dequeue.");
            return null;
        }
    }

    public boolean isEmpty() {
        return queue.isEmpty();
    }

    public int size() {
        return queue.size();
    }

    public List<String> getQueue() {
        return new LinkedList<>(queue);
    }
}

class Tester {
    public static void main(String args[]){
        Queue queue = new Queue(5);

        queue.enqueue("Emily");
        queue.enqueue("Lily");
        queue.enqueue("Rachel");
        queue.enqueue("Rose");

        queue.dequeue();
        queue.dequeue();

        System.out.println("Current queue: " + queue.getQueue());
    }
}
